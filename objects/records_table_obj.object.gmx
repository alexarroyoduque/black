<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xCenter = room_width / 2;
var yCenter = room_height / 2;

var xMargin = 160;
var yMargin = 150;

var horizontalDistance = 150;
var verticalDistance = 50;
headers[0] = 'Total';
headers[1] = 'Fecha';
headers[2] = 'Niveles';


var headersLenght = array_length_1d(headers);
draw_set_font(menu_font);
draw_set_colour(c_white);

for(var i=0; i&lt;headersLenght; i++) {
    draw_text(xMargin + i*horizontalDistance, yMargin, headers[i]);
}

var numberOfLevels = 5;
for(var i=0; i&lt;numberOfLevels; i++) {
    draw_text(xMargin + horizontalDistance*2 + i*horizontalDistance, yMargin + 40, i + 1);
}

draw_rectangle(xMargin - 100, yMargin + 90, xMargin + 1000, yMargin + 93, false);

var positions = 10;
var verticalDistance = 45;
for(var i=0; i&lt;positions; i++) {
    draw_text(xMargin - 90, yMargin + 110 + verticalDistance*i, string(i + 1) + ')');
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(file_exists("leader_board.sav"))
{
    var total,
    date = string(current_year) + "-" + twoDigitsCheck_scr(string(current_month)) + "-" + twoDigitsCheck_scr(string(current_day)),
    levelMinutesResult,
    levelSecondsResult,
    totalMinutes,
    totalSeconds;
    ini_open("leader_board.sav")
    for(var i = 0; i &lt; 10; i++)
    {   total = ini_read_real(string(i), "total_result", 0);
        date = ini_read_string(string(i), "result_date", "0");
        if(total &gt; 0)
        {   totalMinutes = twoDigitsCheck_scr(string(total div 60));
            totalSeconds = twoDigitsCheck_scr(string(total mod 60));
            draw_text(xMargin , yMargin + 110 + verticalDistance*i,string(totalMinutes) + ":" + string(totalSeconds));
            draw_text(xMargin + horizontalDistance , yMargin + 110 + verticalDistance*i, date);
            for(var j = 0; j &lt; 5 ; j++)
            {
               levelMinutesResult =  twoDigitsCheck_scr(string(round(ini_read_real(string(i),"level0"+ string(j + 1)+"-minutes",0))));
               levelSecondsResult =  twoDigitsCheck_scr(string(round(ini_read_real(string(i),"level0"+ string(j + 1)+"-seconds",0))));
    
               draw_text(xMargin + horizontalDistance*2 + j*horizontalDistance, yMargin + 110 + verticalDistance*i,string(levelMinutesResult)+":"+ string(levelSecondsResult));
            }
    
        }
    }
    ini_close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
